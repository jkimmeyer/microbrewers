name: Continuous Integration
on: push
env:
  CAPYBARA_BROWSER_ARGS: "--no-sandbox --disable-dev-shm-usage"
  RAILS_ENV: test
  RACK_ENV: test
  NODE_VERSION: "17.1.0"

jobs:
  yarn_stylelint:
    name: Yarn Stylelint
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - run: export PATH="$HOME/.yarn/bin:$PATH"

      - run: yarn --frozen-lockfile
      - run: yarn stylelint

  yarn_eslint:
    name: Yarn Eslint
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - run: export PATH="$HOME/.yarn/bin:$PATH"

      - run: yarn --frozen-lockfile
      - run: yarn eslint --max-warnings=0

  zeitwerk:
    name: Zeitwerk
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
      - run: gem install bundler --no-document
      - run: bundle install
      - run: export $(grep -v '^#' .env.build | xargs) && bin/rails zeitwerk:check

  brakeman:
    name: Brakeman
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1

      - run: gem install brakeman
      - run: brakeman --run-all-checks --interprocedural --no-pager --exit-on-warn --exit-on-error --add-libs-path app

  ruby_audit:
    name: Ruby Audit
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1

      - run: gem install ruby_audit
      - run: bin/ruby-audit

  bundle_audit:
    name: Bundle Audit
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - run: gem install bundler-audit
      - run: bundle audit check --update

  rubocop:
    name: Rubocop
    runs-on: ubuntu-18.04

    steps:
      - name: checkout-repo
        uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1

      - run: gem install bundle-only
      - run: bundle-only linting
      - run: rubocop -P

  rspec:
    name: RSpec
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: microbrewers
          POSTGRES_DB: microbrewers_web_test
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
      chrome:
        image: browserless/chrome
        ports:
          - 3000:3000

     # Steps to run the build and test
    # --------------------------------------
    steps:
    - name: checkout-repo
      uses: actions/checkout@v2

    # setup Ruby & bundle install with cache
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true # Automatically runs bundle install and caches the gems

    - uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - uses: zweitag/github-actions/global-variables@master
      with:
        file: '.env.test'

    # before_install
    - run: gem install bundler --no-document

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install

    # install

    # before_script
    - name: Setup test database
      run: bin/rails db:test:prepare
      env:
        DATABASE_URL: postgresql://microbrewers:password@localhost/

    - name: Rspec
      run: bin/rspec spec
      env:
        DATABASE_URL: postgresql://localhost/
